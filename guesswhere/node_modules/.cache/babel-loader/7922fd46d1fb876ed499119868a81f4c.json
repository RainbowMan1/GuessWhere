{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\PlayChallenge.js\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@material-ui/core\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nconst db = firebase.firestore();\nconst mapContainerStyleNoMouse = {\n  position: \"absolute\",\n  left: \"80%\",\n  top: \"75%\",\n  height: \"25vh\",\n  width: \"19vw\"\n};\nconst mapContainerStyleMouse = {\n  position: \"absolute\",\n  left: \"65%\",\n  top: \"55%\",\n  height: \"45vh\",\n  width: \"34vw\"\n};\nconst center = {\n  lat: 39.693649,\n  lng: -100.548059\n};\n\nfunction PlayChallenge(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const [marker, setMarker] = useState(null);\n  const [subchallenges, setSubchallenges] = useState([]);\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    challengeId\n  } = params;\n\n  const getSubChallenges = async subchallenges => {\n    var tempchallenges = [];\n    await Promise.all(subchallenges.map(async subchallenge => {\n      const challengedata = await db.collection(\"Sub-challenges\").doc(subchallenge.id).get();\n      tempchallenges = [...tempchallenges, challengedata.data()];\n    }));\n    return tempchallenges;\n  };\n\n  const handleMapClick = event => {\n    setMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const handleMouseOver = event => {\n    setMapStyle(mapContainerStyleMouse);\n  };\n\n  const handleMouseOut = event => {\n    setMapStyle(mapContainerStyleNoMouse);\n  };\n\n  useEffect(() => {\n    const fetchChallenge = async () => {\n      const challengedata = await db.collection(\"Challenges\").doc(challengeId).get();\n      const subchallenges = challengedata.data().subchallenges;\n      console.log(subchallenges[0].id);\n      const tempchallenges = await getSubChallenges(subchallenges);\n      setSubchallenges(tempchallenges);\n    };\n\n    fetchChallenge();\n  }, []);\n  if (loadError) return \"Error\";\n  if (!isLoaded) return \"Loading...\";\n\n  if (subchallenges.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: subchallenges[0].images.map((item, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item,\n              alt: i,\n              height: \"600\",\n              width: \"900\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapstyle,\n        zoom: 0,\n        center: center,\n        onMouseOver: handleMouseOver,\n        onMouseOut: handleMouseOut,\n        onClick: handleMapClick,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PlayChallenge, \"02s0C8C5IVaTELjBsAnM1U6vmAc=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = PlayChallenge;\nexport default PlayChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayChallenge\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/PlayChallenge.js"],"names":["Grid","GoogleMap","Marker","useLoadScript","React","useContext","useEffect","useState","Carousel","AuthContext","firebase","db","firestore","mapContainerStyleNoMouse","position","left","top","height","width","mapContainerStyleMouse","center","lat","lng","PlayChallenge","props","currentUser","mapstyle","setMapStyle","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","marker","setMarker","subchallenges","setSubchallenges","match","params","challengeId","getSubChallenges","tempchallenges","Promise","all","map","subchallenge","challengedata","collection","doc","id","get","data","handleMapClick","event","latLng","handleMouseOver","handleMouseOut","fetchChallenge","console","log","length","images","item","i"],"mappings":"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","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst mapContainerStyleNoMouse = {\r\n  position: \"absolute\",\r\n  left: \"80%\",\r\n  top: \"75%\",\r\n  height: \"25vh\",\r\n  width: \"19vw\",\r\n};\r\n\r\nconst mapContainerStyleMouse = {\r\n  position: \"absolute\",\r\n  left: \"65%\",\r\n  top: \"55%\",\r\n  height: \"45vh\",\r\n  width: \"34vw\",\r\n};\r\n\r\nconst center = {\r\n  lat: 39.693649,\r\n  lng: -100.548059,\r\n};\r\n\r\nfunction PlayChallenge(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n  const [marker, setMarker] = useState(null);\r\n  const [subchallenges, setSubchallenges] = useState([]);\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { challengeId } = params;\r\n\r\n  const getSubChallenges = async (subchallenges) => {\r\n    var tempchallenges = [];\r\n    await Promise.all(\r\n      subchallenges.map(async (subchallenge) => {\r\n        const challengedata = await db\r\n          .collection(\"Sub-challenges\")\r\n          .doc(subchallenge.id)\r\n          .get();\r\n        tempchallenges = [...tempchallenges, challengedata.data()];\r\n      })\r\n    );\r\n    return tempchallenges;\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    setMarker({\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    });\r\n  };\r\n\r\n  const handleMouseOver = (event) => {\r\n    setMapStyle(mapContainerStyleMouse);\r\n  };\r\n\r\n  const handleMouseOut = (event) => {\r\n    setMapStyle(mapContainerStyleNoMouse);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChallenge = async () => {\r\n      const challengedata = await db\r\n        .collection(\"Challenges\")\r\n        .doc(challengeId)\r\n        .get();\r\n      const subchallenges = challengedata.data().subchallenges;\r\n      console.log(subchallenges[0].id);\r\n      const tempchallenges = await getSubChallenges(subchallenges);\r\n      setSubchallenges(tempchallenges);\r\n    };\r\n    fetchChallenge();\r\n  }, []);\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded) return \"Loading...\";\r\n  if (subchallenges.length !== 0) {\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={0}\r\n        >\r\n          <Grid item xs={0} sm={2} md={2} lg={2} />\r\n          <Grid item xs={12} sm={8} md={8} lg={8}>\r\n            <Carousel>\r\n              {subchallenges[0].images.map((item, i) => (\r\n                <img src={item} alt={i} key={i} height={\"600\"} width={\"900\"} />\r\n              ))}\r\n            </Carousel>\r\n          </Grid>\r\n          <Grid item xs={0} sm={2} md={2} lg={2} />\r\n        </Grid>\r\n        <GoogleMap\r\n          mapContainerStyle={mapstyle}\r\n          zoom={0}\r\n          center={center}\r\n          onMouseOver={handleMouseOver}\r\n          onMouseOut={handleMouseOut}\r\n          onClick={handleMapClick}\r\n        >\r\n          <Marker position={marker} />\r\n        </GoogleMap>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n}\r\n\r\nexport default PlayChallenge;\r\n"]},"metadata":{},"sourceType":"module"}
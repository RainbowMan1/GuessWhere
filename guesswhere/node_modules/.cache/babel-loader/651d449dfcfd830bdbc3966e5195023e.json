{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\GuessWhereBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core/\";\nimport firebase from \"../firebase\";\nimport { AuthContext } from \"../AuthProvider\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    \"margin-bottom\": \"2%\"\n  },\n  loggedin: {\n    display: \"flex\",\n    \"align-items\": \"center\"\n  },\n  home: {\n    \"margin-right\": \"75%\"\n  }\n}));\nexport default function GuessWhereBar() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  console.log(currentUser);\n\n  const onLogin = () => {\n    console.log(\"hello\");\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  const browseChallenges = () => {\n    history.push(`/Browse`);\n  };\n\n  const playRandomChallenge = () => {\n    history.push(`/Random`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.home,\n          children: \"GuessWhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.loggedin,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: playRandomChallenge,\n            children: \"Random Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"inherit\",\n            onClick: browseChallenges,\n            children: \"Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: currentUser.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          color: \"inherit\",\n          onClick: onLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuessWhereBar, \"o0VpF57cUZU/4dq/UvnxZfvQQBU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = GuessWhereBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessWhereBar\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/GuessWhereBar.js"],"names":["React","useContext","makeStyles","AppBar","Toolbar","Typography","Button","firebase","AuthContext","useHistory","useStyles","theme","root","flexGrow","loggedin","display","home","GuessWhereBar","classes","history","currentUser","console","log","onLogin","provider","auth","GoogleAuthProvider","signInWithPopup","catch","error","errorCode","code","errorMessage","message","email","credential","browseChallenges","push","playRandomChallenge","displayName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,UAA1B,EAAsCC,MAAtC,QAAoD,oBAApD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJ,qBAAiB;AAFb,GADiC;AAKvCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,MADD;AAER,mBAAe;AAFP,GAL6B;AASvCC,EAAAA,IAAI,EAAE;AACJ,oBAAgB;AADZ;AATiC,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAkBnB,UAAU,CAACO,WAAD,CAAlC;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AACA,QAAMG,OAAO,GAAG,MAAM;AACpBF,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,QAAIE,QAAQ,GAAG,IAAIjB,QAAQ,CAACkB,IAAT,CAAcC,kBAAlB,EAAf;AACAnB,IAAAA,QAAQ,CACLkB,IADH,GAEGE,eAFH,CAEmBH,QAFnB,EAGGI,KAHH,CAGS,UAAUC,KAAV,EAAiB;AACtB;AACA,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIC,YAAY,GAAGH,KAAK,CAACI,OAAzB,CAHsB,CAItB;;AACA,UAAIC,KAAK,GAAGL,KAAK,CAACK,KAAlB,CALsB,CAMtB;;AACA,UAAIC,UAAU,GAAGN,KAAK,CAACM,UAAvB,CAPsB,CAQtB;AACD,KAZH;AAaD,GAhBD;;AAkBA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BjB,IAAAA,OAAO,CAACkB,IAAR,CAAc,SAAd;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM;AAChCnB,IAAAA,OAAO,CAACkB,IAAR,CAAc,SAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACN,IAAxB;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAC,QAAjB;AAAA,6BACE,QAAC,OAAD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAEM,OAAO,CAACF,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGI,WAAW,gBACV;AAAK,UAAA,SAAS,EAAEF,OAAO,CAACJ,QAAxB;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAEwB,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,SAAd;AAAwB,YAAA,OAAO,EAAEF,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAA,sBAA0BhB,WAAW,CAACmB;AAAtC;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADU,gBAWV,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAwB,UAAA,OAAO,EAAEhB,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAzDuBN,a;UACNP,S,EACAD,U;;;KAFMQ,a","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core/\";\r\nimport firebase from \"../firebase\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    \"margin-bottom\": \"2%\",\r\n  },\r\n  loggedin: {\r\n    display: \"flex\",\r\n    \"align-items\": \"center\",\r\n  },\r\n  home: {\r\n    \"margin-right\": \"75%\",\r\n  },\r\n}));\r\n\r\nexport default function GuessWhereBar() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { currentUser } = useContext(AuthContext);\r\n  console.log(currentUser);\r\n  const onLogin = () => {\r\n    console.log(\"hello\");\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // The email of the user's account used.\r\n        var email = error.email;\r\n        // The firebase.auth.AuthCredential type that was used.\r\n        var credential = error.credential;\r\n        // ...\r\n      });\r\n  };\r\n\r\n  const browseChallenges = () => {\r\n    history.push(`/Browse`);\r\n  };\r\n\r\n  const playRandomChallenge = () => {\r\n    history.push(`/Random`);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.home}>\r\n            GuessWhere\r\n          </Typography>\r\n          {currentUser ? (\r\n            <div className={classes.loggedin}>\r\n              <Button color=\"inherit\" onClick={playRandomChallenge}>\r\n                Random Challenge\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={browseChallenges}>\r\n                Challenges\r\n              </Button>\r\n              <Typography variant=\"h6\">{currentUser.displayName}</Typography>\r\n            </div>\r\n          ) : (\r\n            <Button color=\"inherit\" onClick={onLogin}>\r\n              Login\r\n            </Button>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
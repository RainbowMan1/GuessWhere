{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\BrowseChallenges.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nconst useStyles = makeStyles(theme => ({\n  browseheading: {\n    \"margin-bottom\": \"1%\"\n  },\n  cards: {\n    \"margin-bottom\": \"0.5%\"\n  }\n}));\n\nfunction BrowseChallenges(props) {\n  _s();\n\n  const classes = useStyles();\n  const [challenges, setChallenges] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      const db = firebase.firestore();\n      const data = await db.collection(\"Challenges\").get();\n      setChallenges(data.docs);\n    };\n\n    fetchChallenges();\n  }, [challenges]);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      className: classes.browseheading,\n      children: \"Browse Challenges\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      alignItems: \"center\",\n      spacing: 0,\n      children: challenges.map((doc, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.browseheading,\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(ChallengeCard, {\n          name: doc.data().name,\n          challengeId: doc.id,\n          hscore: doc.data().highscore,\n          by: doc.data().By\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseChallenges, \"FzqZx1W+wzG5kFVViLZGs6q++Dc=\", false, function () {\n  return [useStyles];\n});\n\n_c = BrowseChallenges;\nexport default BrowseChallenges;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseChallenges\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/BrowseChallenges.js"],"names":["Grid","makeStyles","Typography","React","useContext","useEffect","useState","Redirect","AuthContext","firebase","useStyles","theme","browseheading","cards","BrowseChallenges","props","classes","challenges","setChallenges","currentUser","fetchChallenges","db","firestore","data","collection","get","docs","map","doc","i","name","id","highscore","By"],"mappings":";;;;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,aAAa,EAAE;AACb,qBAAiB;AADJ,GADwB;AAIvCC,EAAAA,KAAK,EAAE;AACL,qBAAiB;AADZ;AAJgC,CAAZ,CAAD,CAA5B;;AASA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAkBf,UAAU,CAACI,WAAD,CAAlC;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,eAAe,GAAG,YAAY;AAClC,YAAMC,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;AACA,YAAMC,IAAI,GAAG,MAAMF,EAAE,CAACG,UAAH,CAAc,YAAd,EAA4BC,GAA5B,EAAnB;AACAP,MAAAA,aAAa,CAACK,IAAI,CAACG,IAAN,CAAb;AACD,KAJD;;AAKAN,IAAAA,eAAe;AAChB,GAPQ,EAON,CAACH,UAAD,CAPM,CAAT;;AAQA,MAAI,CAACE,WAAL,EAAkB;AAChB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,SAAS,EAAEH,OAAO,CAACJ,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAgC,MAAA,UAAU,EAAC,QAA3C;AAAoD,MAAA,OAAO,EAAE,CAA7D;AAAA,gBACGK,UAAU,CAACU,GAAX,CAAe,CAACC,GAAD,EAAMC,CAAN,kBACd,QAAC,IAAD;AAAc,QAAA,SAAS,EAAEb,OAAO,CAACJ,aAAjC;AAAgD,QAAA,IAAI,MAApD;AAAqD,QAAA,EAAE,EAAE,CAAzD;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,IAAI,EAAEgB,GAAG,CAACL,IAAJ,GAAWO,IADnB;AAEE,UAAA,WAAW,EAAEF,GAAG,CAACG,EAFnB;AAGE,UAAA,MAAM,EAAEH,GAAG,CAACL,IAAJ,GAAWS,SAHrB;AAIE,UAAA,EAAE,EAAEJ,GAAG,CAACL,IAAJ,GAAWU;AAJjB;AAAA;AAAA;AAAA;AAAA;AADF,SAAWJ,CAAX;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAlCQf,gB;UACSJ,S;;;KADTI,gB;AAoCT,eAAeA,gBAAf","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  browseheading: {\r\n    \"margin-bottom\": \"1%\",\r\n  },\r\n  cards: {\r\n    \"margin-bottom\": \"0.5%\",\r\n  },\r\n}));\r\n\r\nfunction BrowseChallenges(props) {\r\n  const classes = useStyles();\r\n  const [challenges, setChallenges] = useState([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const fetchChallenges = async () => {\r\n      const db = firebase.firestore();\r\n      const data = await db.collection(\"Challenges\").get();\r\n      setChallenges(data.docs);\r\n    };\r\n    fetchChallenges();\r\n  }, [challenges]);\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h4\" className={classes.browseheading}>\r\n        Browse Challenges\r\n      </Typography>\r\n      <Grid container direction=\"row\" alignItems=\"center\" spacing={0}>\r\n        {challenges.map((doc, i) => (\r\n          <Grid key={i} className={classes.browseheading} item xs={4}>\r\n            <ChallengeCard\r\n              name={doc.data().name}\r\n              challengeId={doc.id}\r\n              hscore={doc.data().highscore}\r\n              by={doc.data().By}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrowseChallenges;\r\n"]},"metadata":{},"sourceType":"module"}
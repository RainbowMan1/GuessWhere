{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\PlayChallenge.js\",\n    _s = $RefreshSig$();\n\nimport { Grid } from \"@material-ui/core\";\nimport { GoogleMap } from \"@react-google-maps/api\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nconst db = firebase.firestore();\nconst mapContainerStyle = {\n  position: \"absolute\",\n  left: \"100%\",\n  top: \"0\",\n  height: \"25vh\",\n  width: \"25vw\"\n};\n\nfunction PlayChallenge(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [marker, setMarker] = useState(null);\n  const [subchallenges, setSubchallenges] = useState([]);\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    challengeId\n  } = params;\n\n  const getSubChallenges = async subchallenges => {\n    var tempchallenges = [];\n    await Promise.all(subchallenges.map(async subchallenge => {\n      const challengedata = await db.collection(\"Sub-challenges\").doc(subchallenge.id).get();\n      tempchallenges = [...tempchallenges, challengedata.data()];\n    }));\n    return tempchallenges;\n  };\n\n  const handleMapClick = event => {\n    setMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  useEffect(() => {\n    const fetchChallenge = async () => {\n      const challengedata = await db.collection(\"Challenges\").doc(challengeId).get();\n      const subchallenges = challengedata.data().subchallenges;\n      console.log(subchallenges[0].id);\n      const tempchallenges = await getSubChallenges(subchallenges);\n      setSubchallenges(tempchallenges);\n    };\n\n    fetchChallenge();\n  }, []);\n\n  if (subchallenges.length !== 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: subchallenges[0].images.map((item, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item,\n              alt: i,\n              height: 500,\n              width: 500\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 0,\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        zoom: 0,\n        center: center,\n        onClick: handleMapClick,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PlayChallenge, \"3UP9pdQr8prgo9V9svE9d1NlMvY=\");\n\n_c = PlayChallenge;\nexport default PlayChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayChallenge\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/PlayChallenge.js"],"names":["Grid","GoogleMap","React","useContext","useEffect","useState","Carousel","AuthContext","firebase","db","firestore","mapContainerStyle","position","left","top","height","width","PlayChallenge","props","currentUser","marker","setMarker","subchallenges","setSubchallenges","match","params","challengeId","getSubChallenges","tempchallenges","Promise","all","map","subchallenge","challengedata","collection","doc","id","get","data","handleMapClick","event","lat","latLng","lng","fetchChallenge","console","log","length","images","item","i","center"],"mappings":";;;;;AAAA,SAASA,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,UADc;AAExBC,EAAAA,IAAI,EAAE,MAFkB;AAGxBC,EAAAA,GAAG,EAAE,GAHmB;AAIxBC,EAAAA,MAAM,EAAE,MAJgB;AAKxBC,EAAAA,KAAK,EAAE;AALiB,CAA1B;;AAQA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAkBhB,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAEmB,IAAAA;AAAF,MAAYN,KAAlB;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAkBD,MAAxB;;AAEA,QAAME,gBAAgB,GAAG,MAAOL,aAAP,IAAyB;AAChD,QAAIM,cAAc,GAAG,EAArB;AACA,UAAMC,OAAO,CAACC,GAAR,CACJR,aAAa,CAACS,GAAd,CAAkB,MAAOC,YAAP,IAAwB;AACxC,YAAMC,aAAa,GAAG,MAAMxB,EAAE,CAC3ByB,UADyB,CACd,gBADc,EAEzBC,GAFyB,CAErBH,YAAY,CAACI,EAFQ,EAGzBC,GAHyB,EAA5B;AAIAT,MAAAA,cAAc,GAAG,CAAC,GAAGA,cAAJ,EAAoBK,aAAa,CAACK,IAAd,EAApB,CAAjB;AACD,KAND,CADI,CAAN;AASA,WAAOV,cAAP;AACD,GAZD;;AAcA,QAAMW,cAAc,GAAIC,KAAD,IAAW;AAChCnB,IAAAA,SAAS,CAAC;AACRoB,MAAAA,GAAG,EAAED,KAAK,CAACE,MAAN,CAAaD,GAAb,EADG;AAERE,MAAAA,GAAG,EAAEH,KAAK,CAACE,MAAN,CAAaC,GAAb;AAFG,KAAD,CAAT;AAID,GALD;;AAOAvC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwC,cAAc,GAAG,YAAY;AACjC,YAAMX,aAAa,GAAG,MAAMxB,EAAE,CAC3ByB,UADyB,CACd,YADc,EAEzBC,GAFyB,CAErBT,WAFqB,EAGzBW,GAHyB,EAA5B;AAIA,YAAMf,aAAa,GAAGW,aAAa,CAACK,IAAd,GAAqBhB,aAA3C;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,aAAa,CAAC,CAAD,CAAb,CAAiBc,EAA7B;AACA,YAAMR,cAAc,GAAG,MAAMD,gBAAgB,CAACL,aAAD,CAA7C;AACAC,MAAAA,gBAAgB,CAACK,cAAD,CAAhB;AACD,KATD;;AAUAgB,IAAAA,cAAc;AACf,GAZQ,EAYN,EAZM,CAAT;;AAaA,MAAItB,aAAa,CAACyB,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,wBACE;AAAA,8BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAC,QAHV;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,OAAO,EAAE,CALX;AAAA,gCAOE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,CAA7B;AAAgC,UAAA,EAAE,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAiC,UAAA,EAAE,EAAE,CAArC;AAAA,iCACE,QAAC,QAAD;AAAA,sBACGzB,aAAa,CAAC,CAAD,CAAb,CAAiB0B,MAAjB,CAAwBjB,GAAxB,CAA4B,CAACkB,IAAD,EAAOC,CAAP,kBAC3B;AAAK,cAAA,GAAG,EAAED,IAAV;AAAgB,cAAA,GAAG,EAAEC,CAArB;AAAgC,cAAA,MAAM,EAAE,GAAxC;AAA6C,cAAA,KAAK,EAAE;AAApD,eAA6BA,CAA7B;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF,eAeE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAkB,UAAA,EAAE,EAAE,CAAtB;AAAyB,UAAA,EAAE,EAAE,CAA7B;AAAgC,UAAA,EAAE,EAAE;AAApC;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE,QAAC,SAAD;AACE,QAAA,iBAAiB,EAAEvC,iBADrB;AAEE,QAAA,IAAI,EAAE,CAFR;AAGE,QAAA,MAAM,EAAEwC,MAHV;AAIE,QAAA,OAAO,EAAEZ,cAJX;AAAA,+BAME,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEnB;AAAlB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA1EQH,a;;KAAAA,a;AA4ET,eAAeA,aAAf","sourcesContent":["import { Grid } from \"@material-ui/core\";\r\nimport { GoogleMap } from \"@react-google-maps/api\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst mapContainerStyle = {\r\n  position: \"absolute\",\r\n  left: \"100%\",\r\n  top: \"0\",\r\n  height: \"25vh\",\r\n  width: \"25vw\",\r\n};\r\n\r\nfunction PlayChallenge(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [marker, setMarker] = useState(null);\r\n  const [subchallenges, setSubchallenges] = useState([]);\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { challengeId } = params;\r\n\r\n  const getSubChallenges = async (subchallenges) => {\r\n    var tempchallenges = [];\r\n    await Promise.all(\r\n      subchallenges.map(async (subchallenge) => {\r\n        const challengedata = await db\r\n          .collection(\"Sub-challenges\")\r\n          .doc(subchallenge.id)\r\n          .get();\r\n        tempchallenges = [...tempchallenges, challengedata.data()];\r\n      })\r\n    );\r\n    return tempchallenges;\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    setMarker({\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChallenge = async () => {\r\n      const challengedata = await db\r\n        .collection(\"Challenges\")\r\n        .doc(challengeId)\r\n        .get();\r\n      const subchallenges = challengedata.data().subchallenges;\r\n      console.log(subchallenges[0].id);\r\n      const tempchallenges = await getSubChallenges(subchallenges);\r\n      setSubchallenges(tempchallenges);\r\n    };\r\n    fetchChallenge();\r\n  }, []);\r\n  if (subchallenges.length !== 0) {\r\n    return (\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={0}\r\n        >\r\n          <Grid item xs={0} sm={2} md={2} lg={2} />\r\n          <Grid item xs={12} sm={8} md={8} lg={8}>\r\n            <Carousel>\r\n              {subchallenges[0].images.map((item, i) => (\r\n                <img src={item} alt={i} key={i} height={500} width={500} />\r\n              ))}\r\n            </Carousel>\r\n          </Grid>\r\n          <Grid item xs={0} sm={2} md={2} lg={2} />\r\n        </Grid>\r\n        <GoogleMap\r\n          mapContainerStyle={mapContainerStyle}\r\n          zoom={0}\r\n          center={center}\r\n          onClick={handleMapClick}\r\n        >\r\n          <Marker position={marker} />\r\n        </GoogleMap>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n}\r\n\r\nexport default PlayChallenge;\r\n"]},"metadata":{},"sourceType":"module"}
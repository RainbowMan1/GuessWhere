{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/terniawilson/GuessWhere/guesswhere/src/Components/BrowseChallenges.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeCard from \"./ChallengeCard\";\nimport CreateChallengeCard from \"./CreateChallengeCard\";\nimport ParticlesBg from \"particles-bg\";\nconst db = firebase.firestore();\nconst useStyles = makeStyles(theme => ({\n  browseheading: {\n    \"margin-bottom\": \"1%\"\n  },\n  cards: {\n    \"margin-bottom\": \"0.5%\"\n  }\n}));\n\nfunction BrowseChallenges(props) {\n  _s();\n\n  const classes = useStyles();\n  const [challenges, setChallenges] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      const data = await db.collection(\"Challenges\").get();\n      setChallenges(data.docs);\n      console.log(data.docs);\n    };\n\n    fetchChallenges();\n  }, []);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n      type: \"circle\",\n      bg: true,\n      height: \"1000px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          variant: \"h4\",\n          style: {\n            fontSize: \"50px\",\n            textAlign: \"center\",\n            color: \"black\"\n          },\n          className: classes.browseheading,\n          children: \"Browse Challenges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          alignItems: \"center\",\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.browseheading,\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(CreateChallengeCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), challenges.map((doc, i) => /*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.cards,\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(ChallengeCard, {\n              name: doc.data().name,\n              challengeId: doc.id,\n              uid: doc.data().uid,\n              by: doc.data().By\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseChallenges, \"FzqZx1W+wzG5kFVViLZGs6q++Dc=\", false, function () {\n  return [useStyles];\n});\n\n_c = BrowseChallenges;\nexport default BrowseChallenges;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseChallenges\");","map":{"version":3,"sources":["/Users/terniawilson/GuessWhere/guesswhere/src/Components/BrowseChallenges.js"],"names":["Grid","makeStyles","Typography","React","useContext","useEffect","useState","Redirect","AuthContext","firebase","ChallengeCard","CreateChallengeCard","ParticlesBg","db","firestore","useStyles","theme","browseheading","cards","BrowseChallenges","props","classes","challenges","setChallenges","currentUser","fetchChallenges","data","collection","get","docs","console","log","fontSize","textAlign","color","map","doc","i","name","id","uid","By"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeCard from \"./ChallengeCard\";\nimport CreateChallengeCard from \"./CreateChallengeCard\";\nimport ParticlesBg  from \"particles-bg\";\n\nconst db = firebase.firestore();\n\nconst useStyles = makeStyles((theme) => ({\n  browseheading: {\n    \"margin-bottom\": \"1%\",\n  },\n  cards: {\n    \"margin-bottom\": \"0.5%\",\n  },\n}));\n\nfunction BrowseChallenges(props) {\n  const classes = useStyles();\n  const [challenges, setChallenges] = useState([]);\n  const { currentUser } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      const data = await db.collection(\"Challenges\").get();\n      setChallenges(data.docs);\n      console.log(data.docs);\n    };\n    fetchChallenges();\n  }, []);\n\n  if (!currentUser) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <div>\n      <ParticlesBg type=\"circle\" bg={true} height=\"1000px\" />\n      <Grid container direction=\"row\" spacing={0}>\n        <Grid item xs={1} />\n        <Grid item xs={10}>\n          <h1 variant=\"h4\" style={{fontSize: \"50px\", textAlign: \"center\", color: \"black\"}} className={classes.browseheading}>\n            Browse Challenges\n          </h1>\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={0}>\n            <Grid className={classes.browseheading} item xs={4}>\n              <CreateChallengeCard />\n            </Grid>\n\n            {challenges.map((doc, i) => (\n              <Grid key={i} className={classes.cards} item xs={4}>\n                <ChallengeCard\n                  name={doc.data().name}\n                  challengeId={doc.id}\n                  uid={doc.data().uid}\n                  by={doc.data().By}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n\n        <Grid item xs={1} />\n      </Grid>\n    </div>\n  );\n}\n\nexport default BrowseChallenges;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\PlayChallenge.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid } from \"@material-ui/core\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeResult from \"./ChallengeResult\";\nimport SubChallengeResult from \"./SubChallengeResult\";\nimport ParticlesBg from \"particles-bg\";\nconst db = firebase.firestore();\nconst mapContainerStyleNoMouse = {\n  position: \"absolute\",\n  left: \"80%\",\n  top: \"74.5%\",\n  height: \"25vh\",\n  width: \"19.5vw\"\n};\nconst mapContainerStyleMouse = {\n  position: \"absolute\",\n  left: \"65%\",\n  top: \"55%\",\n  height: \"45vh\",\n  width: \"34.5vw\"\n};\nconst center = {\n  lat: 39.693649,\n  lng: -100.548059\n};\n\nfunction PlayChallenge(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\n  const [subchallenges, setSubchallenges] = useState([]);\n  const [totalMarkers, setTotalMarkers] = useState([]);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [currentChallenge, setCurrentChallenge] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [marker, setMarker] = useState(null);\n  const [currentMarkers, setCurrentMarkers] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    challengeId\n  } = params;\n\n  const getSubChallenges = async subchallenges => {\n    var tempchallenges = [];\n    await Promise.all(subchallenges.map(async subchallenge => {\n      const challengedata = await db.collection(\"Sub-challenges\").doc(subchallenge.id).get();\n      tempchallenges = [...tempchallenges, challengedata.data()];\n    }));\n    return tempchallenges;\n  };\n\n  const handleGuess = () => {\n    console.log(subchallenges[currentChallenge].location);\n    const actualMarker = {\n      lat: subchallenges[currentChallenge].location.latitude,\n      lng: subchallenges[currentChallenge].location.longitude\n    };\n    const markersToSend = {\n      actual: actualMarker,\n      guess: marker\n    };\n    setCurrentMarkers(markersToSend);\n    setShowResult(true);\n  };\n\n  const handleMapClick = event => {\n    setMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const handleMouseOver = event => {\n    setMapStyle(mapContainerStyleMouse);\n  };\n\n  const handleMouseOut = event => {\n    setMapStyle(mapContainerStyleNoMouse);\n  };\n\n  useEffect(() => {\n    const fetchChallenge = async () => {\n      const challengedata = await db.collection(\"Challenges\").doc(challengeId).get();\n      const subchallenges = challengedata.data().subchallenges;\n      const tempchallenges = await getSubChallenges(subchallenges);\n      console.log(tempchallenges[0]);\n      setSubchallenges(tempchallenges);\n    };\n\n    fetchChallenge();\n  }, []);\n  const handleContinue = useCallback(points => {\n    console.log(\"updating\");\n    console.log(points);\n    setTotalPoints(currentPoints => currentPoints + points);\n    setMarker(null);\n    setTotalMarkers(total => [...total, currentMarkers]);\n    setCurrentMarkers(null);\n    setCurrentChallenge(current => current + 1);\n    setShowResult(false);\n  }, [currentChallenge, currentMarkers]);\n  if (loadError) return \"Error\";\n  if (!isLoaded || subchallenges.length === 0) return \"Loading...\";\n\n  if (currentChallenge >= subchallenges.length) {\n    console.log(totalPoints);\n    return /*#__PURE__*/_jsxDEV(ChallengeResult, {\n      totalPoints: totalPoints,\n      totalMarkers: totalMarkers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(SubChallengeResult, {\n      Markers: currentMarkers,\n      onContinue: handleContinue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: \"-1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"40px\",\n          textAlign: \"center\",\n          color: \"black\"\n        },\n        children: \"Play Challenge!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"center\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"auto\",\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: subchallenges[currentChallenge].images.map((item, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                align: \"center\",\n                display: \"block\",\n                width: \"auto\",\n                border: \"5px dotted black\",\n                padding: \"20px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              },\n              src: item,\n              alt: i,\n              height: \"450\",\n              width: \"700\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              class: \"center\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"auto\",\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        disabled: marker === null,\n        onClick: handleGuess,\n        style: {\n          position: \"aboslute\",\n          margin: 10,\n          top: \"50%\",\n          left: \"50%\",\n          display: \"block\",\n          align: \"center\",\n          \"-ms-transform\": \"translate(-50%, -50%)\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseOver: handleMouseOver,\n      onMouseOut: handleMouseOut,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapstyle,\n        zoom: 3,\n        center: center,\n        onClick: handleMapClick,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker,\n          icon: {\n            url: `/Images/guess.png`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(15, 15),\n            scaledSize: new window.google.maps.Size(30, 30)\n          },\n          style: {\n            align: \"center\",\n            width: \"auto\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            position: \"fixed\",\n            bottom: \"0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayChallenge, \"5r24d7N+2cmZUFs/r7a3LQvJAH4=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = PlayChallenge;\nexport default PlayChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayChallenge\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/PlayChallenge.js"],"names":["Button","Grid","GoogleMap","Marker","useLoadScript","React","useCallback","useContext","useEffect","useState","Carousel","AuthContext","firebase","ChallengeResult","SubChallengeResult","ParticlesBg","db","firestore","mapContainerStyleNoMouse","position","left","top","height","width","mapContainerStyleMouse","center","lat","lng","PlayChallenge","props","currentUser","mapstyle","setMapStyle","subchallenges","setSubchallenges","totalMarkers","setTotalMarkers","totalPoints","setTotalPoints","currentChallenge","setCurrentChallenge","showResult","setShowResult","marker","setMarker","currentMarkers","setCurrentMarkers","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","match","params","challengeId","getSubChallenges","tempchallenges","Promise","all","map","subchallenge","challengedata","collection","doc","id","get","data","handleGuess","console","log","location","actualMarker","latitude","longitude","markersToSend","actual","guess","handleMapClick","event","latLng","handleMouseOver","handleMouseOut","fetchChallenge","handleContinue","points","currentPoints","total","current","length","zIndex","fontSize","textAlign","color","images","item","i","align","display","border","padding","marginLeft","marginRight","margin","transform","url","origin","window","google","maps","Point","anchor","scaledSize","Size","bottom"],"mappings":"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","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\r\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\r\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport Carousel from \"react-material-ui-carousel\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\nimport ChallengeResult from \"./ChallengeResult\";\r\nimport SubChallengeResult from \"./SubChallengeResult\";\r\nimport ParticlesBg from \"particles-bg\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst mapContainerStyleNoMouse = {\r\n  position: \"absolute\",\r\n  left: \"80%\",\r\n  top: \"74.5%\",\r\n  height: \"25vh\",\r\n  width: \"19.5vw\",\r\n};\r\n\r\nconst mapContainerStyleMouse = {\r\n  position: \"absolute\",\r\n  left: \"65%\",\r\n  top: \"55%\",\r\n  height: \"45vh\",\r\n  width: \"34.5vw\",\r\n};\r\n\r\nconst center = {\r\n  lat: 39.693649,\r\n  lng: -100.548059,\r\n};\r\n\r\nfunction PlayChallenge(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\r\n  const [subchallenges, setSubchallenges] = useState([]);\r\n  const [totalMarkers, setTotalMarkers] = useState([]);\r\n  const [totalPoints, setTotalPoints] = useState(0);\r\n  const [currentChallenge, setCurrentChallenge] = useState(0);\r\n\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [marker, setMarker] = useState(null);\r\n  const [currentMarkers, setCurrentMarkers] = useState(null);\r\n\r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  });\r\n\r\n  const { match } = props;\r\n  const { params } = match;\r\n  const { challengeId } = params;\r\n\r\n  const getSubChallenges = async (subchallenges) => {\r\n    var tempchallenges = [];\r\n    await Promise.all(\r\n      subchallenges.map(async (subchallenge) => {\r\n        const challengedata = await db\r\n          .collection(\"Sub-challenges\")\r\n          .doc(subchallenge.id)\r\n          .get();\r\n        tempchallenges = [...tempchallenges, challengedata.data()];\r\n      })\r\n    );\r\n    return tempchallenges;\r\n  };\r\n\r\n  const handleGuess = () => {\r\n    console.log(subchallenges[currentChallenge].location);\r\n    const actualMarker = {\r\n      lat: subchallenges[currentChallenge].location.latitude,\r\n      lng: subchallenges[currentChallenge].location.longitude,\r\n    };\r\n    const markersToSend = {\r\n      actual: actualMarker,\r\n      guess: marker,\r\n    };\r\n    setCurrentMarkers(markersToSend);\r\n    setShowResult(true);\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    setMarker({\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng(),\r\n    });\r\n  };\r\n\r\n  const handleMouseOver = (event) => {\r\n    setMapStyle(mapContainerStyleMouse);\r\n  };\r\n\r\n  const handleMouseOut = (event) => {\r\n    setMapStyle(mapContainerStyleNoMouse);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchChallenge = async () => {\r\n      const challengedata = await db\r\n        .collection(\"Challenges\")\r\n        .doc(challengeId)\r\n        .get();\r\n      const subchallenges = challengedata.data().subchallenges;\r\n\r\n      const tempchallenges = await getSubChallenges(subchallenges);\r\n      console.log(tempchallenges[0]);\r\n      setSubchallenges(tempchallenges);\r\n    };\r\n    fetchChallenge();\r\n  }, []);\r\n\r\n  const handleContinue = useCallback(\r\n    (points) => {\r\n      console.log(\"updating\");\r\n      console.log(points);\r\n      setTotalPoints((currentPoints) => currentPoints + points);\r\n      setMarker(null);\r\n      setTotalMarkers((total) => [...total, currentMarkers]);\r\n      setCurrentMarkers(null);\r\n      setCurrentChallenge((current) => current + 1);\r\n      setShowResult(false);\r\n    },\r\n    [currentChallenge, currentMarkers]\r\n  );\r\n\r\n  if (loadError) return \"Error\";\r\n  if (!isLoaded || subchallenges.length === 0) return \"Loading...\";\r\n  if (currentChallenge >= subchallenges.length) {\r\n    console.log(totalPoints);\r\n    return (\r\n      <ChallengeResult totalPoints={totalPoints} totalMarkers={totalMarkers} />\r\n    );\r\n  }\r\n  if (showResult) {\r\n    return (\r\n      <SubChallengeResult\r\n        Markers={currentMarkers}\r\n        onContinue={handleContinue}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"0\",\r\n          left: \"0\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          zIndex: \"-1\",\r\n        }}\r\n      >\r\n        <ParticlesBg type=\"circle\" bg={true} />\r\n      </div>\r\n      <div>\r\n        <h1 style={{ fontSize: \"40px\", textAlign: \"center\", color: \"black\" }}>\r\n          Play Challenge!\r\n        </h1>\r\n      </div>\r\n      <div>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          spacing={0}\r\n        >\r\n          <Grid item xs={\"auto\"} sm={2} md={2} lg={2} />\r\n          <Grid item xs={12} sm={8} md={8} lg={8}>\r\n            <Carousel>\r\n              {subchallenges[currentChallenge].images.map((item, i) => (\r\n                <img\r\n                  style={{\r\n                    align: \"center\",\r\n                    display: \"block\",\r\n                    width: \"auto\",\r\n                    border: \"5px dotted black\",\r\n                    padding: \"20px\",\r\n                    marginLeft: \"auto\",\r\n                    marginRight: \"auto\",\r\n                  }}\r\n                  src={item}\r\n                  alt={i}\r\n                  key={i}\r\n                  height={\"450\"}\r\n                  width={\"700\"}\r\n                  marginLeft={\"auto\"}\r\n                  marginRight={\"auto\"}\r\n                  class={\"center\"}\r\n                />\r\n              ))}\r\n            </Carousel>\r\n          </Grid>\r\n          <Grid item xs={\"auto\"} sm={2} md={2} lg={2} />\r\n        </Grid>\r\n      </div>\r\n      <div>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          disabled={marker === null}\r\n          onClick={handleGuess}\r\n          style={{\r\n            position: \"aboslute\",\r\n            margin: 10,\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            display: \"block\",\r\n            align: \"center\",\r\n            \"-ms-transform\": \"translate(-50%, -50%)\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n        >\r\n          Guess\r\n        </Button>\r\n      </div>\r\n      <div onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\r\n        <GoogleMap\r\n          mapContainerStyle={mapstyle}\r\n          zoom={3}\r\n          center={center}\r\n          onClick={handleMapClick}\r\n        >\r\n          <Marker\r\n            position={marker}\r\n            icon={{\r\n              url: `/Images/guess.png`,\r\n              origin: new window.google.maps.Point(0, 0),\r\n              anchor: new window.google.maps.Point(15, 15),\r\n              scaledSize: new window.google.maps.Size(30, 30),\r\n            }}\r\n            style={{\r\n              align: \"center\",\r\n              width: \"auto\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n            }}\r\n          />\r\n        </GoogleMap>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayChallenge;\r\n"]},"metadata":{},"sourceType":"module"}
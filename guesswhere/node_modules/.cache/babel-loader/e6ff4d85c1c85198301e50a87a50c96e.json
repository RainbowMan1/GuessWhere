{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Grid,makeStyles,Typography}from\"@material-ui/core\";import React,{useContext,useEffect,useState}from\"react\";import{Redirect}from\"react-router-dom\";import{AuthContext}from\"../AuthProvider\";import firebase from\"../firebase\";import ChallengeCard from\"./ChallengeCard\";import CreateChallengeCard from\"./CreateChallengeCard\";import ParticlesBg from\"particles-bg\";var db=firebase.firestore();var useStyles=makeStyles(function(theme){return{browseheading:{\"margin-bottom\":\"1%\"},cards:{\"margin-bottom\":\"0.5%\"}};});function BrowseChallenges(props){var classes=useStyles();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),challenges=_useState2[0],setChallenges=_useState2[1];var _useContext=useContext(AuthContext),currentUser=_useContext.currentUser;useEffect(function(){var fetchChallenges=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return db.collection(\"Challenges\").get();case 2:data=_context.sent;setChallenges(data.docs);console.log(data.docs);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchChallenges(){return _ref.apply(this,arguments);};}();fetchChallenges();},[]);if(!currentUser){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",spacing:0,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:1}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:10,children:[/*#__PURE__*/_jsx(\"div\",{style:{position:\"fixed\",top:\"0\",left:\"0\",width:\"100%\",height:\"100%\",zIndex:\"-1\"},children:/*#__PURE__*/_jsx(ParticlesBg,{type:\"circle\",bg:true,height:\"1000px\"})}),/*#__PURE__*/_jsx(\"h1\",{variant:\"h4\",style:{fontSize:\"50px\",textAlign:\"center\",color:\"black\"},className:classes.browseheading,children:\"Browse Challenges\"}),/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",alignItems:\"center\",spacing:5,children:[/*#__PURE__*/_jsx(Grid,{className:classes.browseheading,item:true,xs:4,children:/*#__PURE__*/_jsx(CreateChallengeCard,{})}),challenges.map(function(doc,i){return/*#__PURE__*/_jsx(Grid,{className:classes.cards,item:true,xs:4,children:/*#__PURE__*/_jsx(ChallengeCard,{name:doc.data().name,challengeId:doc.id,uid:doc.data().uid,by:doc.data().By})},i);})]})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:1})]})})});}export default BrowseChallenges;","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/BrowseChallenges.js"],"names":["Grid","makeStyles","Typography","React","useContext","useEffect","useState","Redirect","AuthContext","firebase","ChallengeCard","CreateChallengeCard","ParticlesBg","db","firestore","useStyles","theme","browseheading","cards","BrowseChallenges","props","classes","challenges","setChallenges","currentUser","fetchChallenges","collection","get","data","docs","console","log","position","top","left","width","height","zIndex","fontSize","textAlign","color","map","doc","i","name","id","uid","By"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\nimport ChallengeCard from \"./ChallengeCard\";\r\nimport CreateChallengeCard from \"./CreateChallengeCard\";\r\nimport ParticlesBg  from \"particles-bg\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  browseheading: {\r\n    \"margin-bottom\": \"1%\",\r\n  },\r\n  cards: {\r\n    \"margin-bottom\": \"0.5%\",\r\n  },\r\n}));\r\n\r\nfunction BrowseChallenges(props) {\r\n  const classes = useStyles();\r\n  const [challenges, setChallenges] = useState([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const fetchChallenges = async () => {\r\n      const data = await db.collection(\"Challenges\").get();\r\n      setChallenges(data.docs);\r\n      console.log(data.docs);\r\n    };\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n  \r\n\r\n      <div>\r\n      <Grid container direction=\"row\" spacing={0}>\r\n        <Grid item xs={1} />\r\n        <Grid item xs={10}>\r\n          \r\n      \r\n      <div\r\n      \r\n      style={{\r\n        position: \"fixed\",\r\n        top:\"0\", \r\n        left:\"0\", \r\n        width:\"100%\", \r\n        height:\"100%\",\r\n        zIndex: \"-1\"\r\n      }}\r\n      >\r\n      <ParticlesBg type=\"circle\" bg={true} height=\"1000px\" />\r\n      </div>\r\n      \r\n          <h1 variant=\"h4\" style={{fontSize: \"50px\", textAlign: \"center\", color: \"black\"}} className={classes.browseheading}>\r\n            Browse Challenges\r\n          </h1>\r\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={5}>\r\n            <Grid className={classes.browseheading} item xs={4}>\r\n              <CreateChallengeCard />\r\n            </Grid>\r\n\r\n            {challenges.map((doc, i) => (\r\n              <Grid key={i} className={classes.cards} item xs={4}>\r\n                <ChallengeCard\r\n                  name={doc.data().name}\r\n                  challengeId={doc.id}\r\n                  uid={doc.data().uid}\r\n                  by={doc.data().By}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={1} />\r\n      </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrowseChallenges;"]},"metadata":{},"sourceType":"module"}
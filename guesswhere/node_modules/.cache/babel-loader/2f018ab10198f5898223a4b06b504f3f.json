{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\CreateChallenge.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport AddSubChallengeModal from \"./AddSubChallengeModal\";\nimport firebase from \"../firebase\";\nimport { AuthContext } from \"../AuthProvider\";\nimport { Redirect } from \"react-router-dom\";\nimport { Button } from \"@material-ui/core\";\nconst db = firebase.firestore();\n\nfunction CreateChallenge(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [open, setOpen] = useState(false);\n  const [subchallenges, setSubchallenges] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const getFileUrls = async subchallenge => {\n    var fileUrls = [];\n    subchallenge.files.map(async file => {\n      const storageRef = firebase.storage().ref();\n      const fileRef = storageRef.child(file.name);\n      await fileRef.put(file);\n      const fileUrl = await fileRef.getDownloadURL();\n      fileUrls = [...fileUrls, fileUrl];\n    });\n    return fileUrls;\n  };\n\n  const addSubchallenges = async () => {};\n\n  const handleChallengeSubmit = async () => {\n    var subRefs = [];\n    await subchallenges.map(async subchallenge => {\n      const fileUrls = await getFileUrls(subchallenge);\n      console.log(fileUrls);\n    });\n  }; // \tconsole.log(fileUrls);\n  //   await db\n  //     .collection(\"Sub-challenges\")\n  //     .add({\n  //       images: fileUrls,\n  //       location: new firebase.firestore.GeoPoint(\n  //         subchallenge.marker.lat,\n  //         subchallenge.marker.lng\n  //       ),\n  //     })\n  //     .then(function (docRef) {\n  //       subRefs = [...subRefs, docRef];\n  //     })\n  //     .catch(function (error) {\n  //       console.error(\"Error adding document: \", error);\n  //     });\n  // }).then( async function() {\n  //   await db\n  //   .collection(\"Challenges\")\n  //   .add({\n  //     uid: currentUser.uid,\n  //     subchallenges: subRefs,\n  //   })\n  //   .catch(function (error) {\n  //     console.error(\"Error adding document: \", error);\n  //   });\n  // console.log(\"Done\");\n  // });\n  // const file = files[0];\n  //   images: fileUrl,\n\n\n  const handleSubChallengeSubmit = async (files, marker) => {\n    const subchallenge = {\n      files,\n      marker\n    };\n    setSubchallenges(current => [...current, subchallenge]);\n  };\n\n  console.log(subchallenges);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: handleOpen,\n        children: \"Add a Sub Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSubChallengeModal, {\n        open: open,\n        handleClose: handleClose,\n        onSubmit: handleSubChallengeSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: subchallenges.map((subchallenge, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: subchallenge.marker.toString()\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        onClick: handleChallengeSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateChallenge, \"+rG8VA/KEgXqRkJVW4NHh64pDXk=\");\n\n_c = CreateChallenge;\nexport default CreateChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChallenge\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/CreateChallenge.js"],"names":["React","useContext","useState","AddSubChallengeModal","firebase","AuthContext","Redirect","Button","db","firestore","CreateChallenge","props","currentUser","open","setOpen","subchallenges","setSubchallenges","handleOpen","handleClose","getFileUrls","subchallenge","fileUrls","files","map","file","storageRef","storage","ref","fileRef","child","name","put","fileUrl","getDownloadURL","addSubchallenges","handleChallengeSubmit","subRefs","console","log","handleSubChallengeSubmit","marker","current","i","toString"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport AddSubChallengeModal from \"./AddSubChallengeModal\";\r\nimport firebase from \"../firebase\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction CreateChallenge(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [subchallenges, setSubchallenges] = useState([]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getFileUrls = async (subchallenge) => {\r\n    var fileUrls = [];\r\n    subchallenge.files.map(async (file) => {\r\n      const storageRef = firebase.storage().ref();\r\n      const fileRef = storageRef.child(file.name);\r\n      await fileRef.put(file);\r\n      const fileUrl = await fileRef.getDownloadURL();\r\n      fileUrls = [...fileUrls, fileUrl];\r\n    });\r\n    return fileUrls;\r\n  };\r\n\r\n  const addSubchallenges = async () => {};\r\n\r\n  const handleChallengeSubmit = async () => {\r\n    var subRefs = [];\r\n    await subchallenges.map(async (subchallenge) => {\r\n      const fileUrls = await getFileUrls(subchallenge);\r\n      console.log(fileUrls);\r\n    });\r\n  };\r\n\r\n  // \tconsole.log(fileUrls);\r\n\r\n  //   await db\r\n  //     .collection(\"Sub-challenges\")\r\n  //     .add({\r\n  //       images: fileUrls,\r\n  //       location: new firebase.firestore.GeoPoint(\r\n  //         subchallenge.marker.lat,\r\n  //         subchallenge.marker.lng\r\n  //       ),\r\n  //     })\r\n  //     .then(function (docRef) {\r\n  //       subRefs = [...subRefs, docRef];\r\n  //     })\r\n  //     .catch(function (error) {\r\n  //       console.error(\"Error adding document: \", error);\r\n  //     });\r\n  // }).then( async function() {\r\n  //   await db\r\n  //   .collection(\"Challenges\")\r\n  //   .add({\r\n  //     uid: currentUser.uid,\r\n  //     subchallenges: subRefs,\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.error(\"Error adding document: \", error);\r\n  //   });\r\n  // console.log(\"Done\");\r\n  // });\r\n\r\n  // const file = files[0];\r\n\r\n  //   images: fileUrl,\r\n\r\n  const handleSubChallengeSubmit = async (files, marker) => {\r\n    const subchallenge = { files, marker };\r\n    setSubchallenges((current) => [...current, subchallenge]);\r\n  };\r\n  console.log(subchallenges);\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>Create Challenge</h2>\r\n      <div>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleOpen}>\r\n          Add a Sub Challenge\r\n        </Button>\r\n        <AddSubChallengeModal\r\n          open={open}\r\n          handleClose={handleClose}\r\n          onSubmit={handleSubChallengeSubmit}\r\n        />\r\n        <ul>\r\n          {subchallenges.map((subchallenge, i) => (\r\n            <p key={i}>{subchallenge.marker.toString()}</p>\r\n          ))}\r\n        </ul>\r\n        <Button size=\"small\" color=\"primary\" onClick={handleChallengeSubmit}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default CreateChallenge;\r\n"]},"metadata":{},"sourceType":"module"}
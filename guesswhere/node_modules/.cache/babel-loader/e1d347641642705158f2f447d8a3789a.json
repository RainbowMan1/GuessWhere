{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nikesh\\\\Desktop\\\\GuessWhere\\\\guesswhere\\\\src\\\\Components\\\\BrowseChallenges.js\",\n    _s = $RefreshSig$();\n\nimport { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeCard from \"./ChallengeCard\";\nimport CreateChallengeCard from \"./CreateChallengeCard\";\nimport ParticlesBg from \"particles-bg\";\nconst db = firebase.firestore();\nconst useStyles = makeStyles(theme => ({\n  browseheading: {\n    \"margin-bottom\": \"1%\"\n  },\n  cards: {\n    \"margin-bottom\": \"0.5%\"\n  }\n}));\n\nfunction BrowseChallenges(props) {\n  _s();\n\n  const classes = useStyles();\n  const [challenges, setChallenges] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchChallenges = async () => {\n      const data = await db.collection(\"Challenges\").get();\n      setChallenges(data.docs);\n      console.log(data.docs);\n    };\n\n    fetchChallenges();\n  }, []);\n\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"fixed\",\n              top: \"0\",\n              left: \"0\",\n              width: \"100%\",\n              height: \"100%\",\n              zIndex: \"-1\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ParticlesBg, {\n              type: \"circle\",\n              bg: true,\n              height: \"1000px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            variant: \"h4\",\n            style: {\n              fontSize: \"50px\",\n              textAlign: \"center\",\n              color: \"black\"\n            },\n            className: classes.browseheading,\n            children: \"Browse Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            alignItems: \"center\",\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.browseheading,\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(CreateChallengeCard, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this), challenges.map((doc, i) => /*#__PURE__*/_jsxDEV(Grid, {\n              className: classes.cards,\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(ChallengeCard, {\n                name: doc.data().name,\n                challengeId: doc.id,\n                uid: doc.data().uid,\n                by: doc.data().By\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BrowseChallenges, \"FzqZx1W+wzG5kFVViLZGs6q++Dc=\", false, function () {\n  return [useStyles];\n});\n\n_c = BrowseChallenges;\nexport default BrowseChallenges;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrowseChallenges\");","map":{"version":3,"sources":["C:/Users/Nikesh/Desktop/GuessWhere/guesswhere/src/Components/BrowseChallenges.js"],"names":["Grid","makeStyles","Typography","React","useContext","useEffect","useState","Redirect","AuthContext","firebase","ChallengeCard","CreateChallengeCard","ParticlesBg","db","firestore","useStyles","theme","browseheading","cards","BrowseChallenges","props","classes","challenges","setChallenges","currentUser","fetchChallenges","data","collection","get","docs","console","log","position","top","left","width","height","zIndex","fontSize","textAlign","color","map","doc","i","name","id","uid","By"],"mappings":"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","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../AuthProvider\";\r\nimport firebase from \"../firebase\";\r\nimport ChallengeCard from \"./ChallengeCard\";\r\nimport CreateChallengeCard from \"./CreateChallengeCard\";\r\nimport ParticlesBg  from \"particles-bg\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  browseheading: {\r\n    \"margin-bottom\": \"1%\",\r\n  },\r\n  cards: {\r\n    \"margin-bottom\": \"0.5%\",\r\n  },\r\n}));\r\n\r\nfunction BrowseChallenges(props) {\r\n  const classes = useStyles();\r\n  const [challenges, setChallenges] = useState([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const fetchChallenges = async () => {\r\n      const data = await db.collection(\"Challenges\").get();\r\n      setChallenges(data.docs);\r\n      console.log(data.docs);\r\n    };\r\n    fetchChallenges();\r\n  }, []);\r\n\r\n  if (!currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n  \r\n\r\n      <div>\r\n      <Grid container direction=\"row\" spacing={0}>\r\n        <Grid item xs={1} />\r\n        <Grid item xs={10}>\r\n          \r\n      \r\n      <div\r\n      \r\n      style={{\r\n        position: \"fixed\",\r\n        top:\"0\", \r\n        left:\"0\", \r\n        width:\"100%\", \r\n        height:\"100%\",\r\n        zIndex: \"-1\"\r\n      }}\r\n      >\r\n      <ParticlesBg type=\"circle\" bg={true} height=\"1000px\" />\r\n      </div>\r\n      \r\n          <h1 variant=\"h4\" style={{fontSize: \"50px\", textAlign: \"center\", color: \"black\"}} className={classes.browseheading}>\r\n            Browse Challenges\r\n          </h1>\r\n          <Grid container direction=\"row\" alignItems=\"center\" spacing={0}>\r\n            <Grid className={classes.browseheading} item xs={4}>\r\n              <CreateChallengeCard />\r\n            </Grid>\r\n\r\n            {challenges.map((doc, i) => (\r\n              <Grid key={i} className={classes.cards} item xs={4}>\r\n                <ChallengeCard\r\n                  name={doc.data().name}\r\n                  challengeId={doc.id}\r\n                  uid={doc.data().uid}\r\n                  by={doc.data().By}\r\n                />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={1} />\r\n      </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BrowseChallenges;"]},"metadata":{},"sourceType":"module"}
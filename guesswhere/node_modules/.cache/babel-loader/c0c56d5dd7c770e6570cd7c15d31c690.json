{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/terniawilson/GuessWhere/guesswhere/src/Components/RandomChallenge.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Grid } from \"@material-ui/core\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeResult from \"./ChallengeResult\";\nimport SubChallengeResult from \"./SubChallengeResult\";\nimport ParticlesBg from \"particles-bg\";\nconst db = firebase.firestore();\nconst mapContainerStyleNoMouse = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"100%\",\n  height: \"25vh\",\n  width: \"19.5vw\",\n  \"-ms-transform\": \"translate(-50%, -50%)\",\n  transform: \"translate(-50%, -50%)\"\n};\nconst mapContainerStyleMouse = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"100%\",\n  height: \"45vh\",\n  width: \"100%\",\n  \"-ms-transform\": \"translate(-50%, -50%)\",\n  transform: \"translate(-50%, -50%)\"\n};\nconst center = {\n  lat: 39.693649,\n  lng: -100.548059\n};\n\nconst getRandomSubarray = (arr, size) => {\n  var shuffled = arr.slice(0),\n      i = arr.length,\n      temp,\n      index;\n\n  while (i--) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n\n  return shuffled.slice(0, size);\n};\n\nfunction RandomChallenge(props) {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\n  const [subchallenges, setSubchallenges] = useState([]);\n  const [totalMarkers, setTotalMarkers] = useState([]);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [currentChallenge, setCurrentChallenge] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [marker, setMarker] = useState(null);\n  const [currentMarkers, setCurrentMarkers] = useState(null);\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  });\n  const {\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    challengeId\n  } = params;\n\n  const getSubChallenges = async subchallenges => {\n    var tempchallenges = [];\n    await Promise.all(subchallenges.map(async subchallenge => {\n      const challengedata = await db.collection(\"Sub-challenges\").doc(subchallenge.id).get();\n      tempchallenges = [...tempchallenges, challengedata.data()];\n    }));\n    return tempchallenges;\n  };\n\n  const handleGuess = () => {\n    console.log(subchallenges[currentChallenge].location);\n    const actualMarker = {\n      lat: subchallenges[currentChallenge].location.latitude,\n      lng: subchallenges[currentChallenge].location.longitude\n    };\n    const markersToSend = {\n      actual: actualMarker,\n      guess: marker\n    };\n    setCurrentMarkers(markersToSend);\n    setShowResult(true);\n  };\n\n  const handleMapClick = event => {\n    setMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const handleMouseOver = event => {\n    setMapStyle(mapContainerStyleMouse);\n  };\n\n  const handleMouseOut = event => {\n    setMapStyle(mapContainerStyleNoMouse);\n  };\n\n  useEffect(() => {\n    const fetchChallenge = async () => {\n      const challengedata = await db.collection(\"Sub-challenges\").get();\n      var subchallenges = challengedata.docs;\n\n      if (subchallenges.length > 5) {\n        subchallenges = getRandomSubarray(subchallenges, 5);\n      }\n\n      const tempchallenges = await getSubChallenges(subchallenges);\n      console.log(tempchallenges[0]);\n      setSubchallenges(tempchallenges);\n    };\n\n    fetchChallenge();\n  }, []);\n  const handleContinue = useCallback(points => {\n    console.log(\"updating\");\n    console.log(points);\n    setTotalPoints(currentPoints => currentPoints + points);\n    setMarker(null);\n    setTotalMarkers(total => [...total, currentMarkers]);\n    setCurrentMarkers(null);\n    setCurrentChallenge(current => current + 1);\n    setShowResult(false);\n  }, [currentChallenge, currentMarkers]);\n  if (loadError) return \"Error\";\n  if (!isLoaded || subchallenges.length === 0) return \"Loading...\";\n\n  if (currentChallenge >= subchallenges.length) {\n    console.log(totalPoints);\n    return /*#__PURE__*/_jsxDEV(ChallengeResult, {\n      totalPoints: totalPoints,\n      totalMarkers: totalMarkers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(SubChallengeResult, {\n      Markers: currentMarkers,\n      onContinue: handleContinue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"100%\",\n        height: \"100%\",\n        zIndex: \"-1\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"circle\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: \"40px\",\n          textAlign: \"center\",\n          color: \"black\"\n        },\n        children: \"Random Challenge!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        alignItems: \"center\",\n        justify: \"center\",\n        spacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"auto\",\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            children: subchallenges[currentChallenge].images.map((item, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                align: \"center\",\n                display: \"block\",\n                width: \"auto\",\n                border: \"5px dotted black\",\n                padding: \"20px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              },\n              src: item,\n              alt: i,\n              height: \"550\",\n              width: \"800\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              class: \"center\"\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: \"auto\",\n          sm: 2,\n          md: 2,\n          lg: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        size: \"large\",\n        variant: \"contained\",\n        disabled: marker === null,\n        onClick: handleGuess,\n        style: {\n          position: \"aboslute\",\n          top: \"50%\",\n          left: \"50%\",\n          display: \"block\",\n          align: \"center\",\n          \"-ms-transform\": \"translate(-50%, -50%)\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onMouseOver: handleMouseOver,\n      onMouseOut: handleMouseOut,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapstyle,\n        zoom: 3,\n        center: center,\n        onClick: handleMapClick,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker,\n          icon: {\n            url: `/Images/guess.png`,\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(15, 15),\n            scaledSize: new window.google.maps.Size(30, 30)\n          },\n          style: {\n            align: \"center\",\n            width: \"auto\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            position: \"fixed\",\n            bottom: \"0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RandomChallenge, \"5r24d7N+2cmZUFs/r7a3LQvJAH4=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = RandomChallenge;\nexport default RandomChallenge;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomChallenge\");","map":{"version":3,"sources":["/Users/terniawilson/GuessWhere/guesswhere/src/Components/RandomChallenge.js"],"names":["Button","Grid","GoogleMap","Marker","useLoadScript","React","useCallback","useContext","useEffect","useState","Carousel","AuthContext","firebase","ChallengeResult","SubChallengeResult","ParticlesBg","db","firestore","mapContainerStyleNoMouse","position","left","top","height","width","transform","mapContainerStyleMouse","center","lat","lng","getRandomSubarray","arr","size","shuffled","slice","i","length","temp","index","Math","floor","random","RandomChallenge","props","currentUser","mapstyle","setMapStyle","subchallenges","setSubchallenges","totalMarkers","setTotalMarkers","totalPoints","setTotalPoints","currentChallenge","setCurrentChallenge","showResult","setShowResult","marker","setMarker","currentMarkers","setCurrentMarkers","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","match","params","challengeId","getSubChallenges","tempchallenges","Promise","all","map","subchallenge","challengedata","collection","doc","id","get","data","handleGuess","console","log","location","actualMarker","latitude","longitude","markersToSend","actual","guess","handleMapClick","event","latLng","handleMouseOver","handleMouseOut","fetchChallenge","docs","handleContinue","points","currentPoints","total","current","zIndex","fontSize","textAlign","color","images","item","align","display","border","padding","marginLeft","marginRight","url","origin","window","google","maps","Point","anchor","scaledSize","Size","bottom"],"mappings":"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","sourcesContent":["import { Button, Grid } from \"@material-ui/core\";\nimport { GoogleMap, Marker, useLoadScript } from \"@react-google-maps/api\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport Carousel from \"react-material-ui-carousel\";\nimport { AuthContext } from \"../AuthProvider\";\nimport firebase from \"../firebase\";\nimport ChallengeResult from \"./ChallengeResult\";\nimport SubChallengeResult from \"./SubChallengeResult\";\nimport ParticlesBg  from \"particles-bg\";\n\nconst db = firebase.firestore();\n\nconst mapContainerStyleNoMouse = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"100%\",\n  height: \"25vh\",\n  width: \"19.5vw\",\n  \"-ms-transform\": \"translate(-50%, -50%)\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nconst mapContainerStyleMouse = {\n  position: \"absolute\",\n  left: \"50%\",\n  top: \"100%\",\n  height: \"45vh\",\n  width: \"100%\",\n  \"-ms-transform\": \"translate(-50%, -50%)\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nconst center = {\n  lat: 39.693649,\n  lng: -100.548059,\n};\n\nconst getRandomSubarray = (arr, size) => {\n  var shuffled = arr.slice(0),\n    i = arr.length,\n    temp,\n    index;\n  while (i--) {\n    index = Math.floor((i + 1) * Math.random());\n    temp = shuffled[index];\n    shuffled[index] = shuffled[i];\n    shuffled[i] = temp;\n  }\n  return shuffled.slice(0, size);\n};\n\nfunction RandomChallenge(props) {\n  const { currentUser } = useContext(AuthContext);\n\n  const [mapstyle, setMapStyle] = useState(mapContainerStyleNoMouse);\n  const [subchallenges, setSubchallenges] = useState([]);\n  const [totalMarkers, setTotalMarkers] = useState([]);\n  const [totalPoints, setTotalPoints] = useState(0);\n  const [currentChallenge, setCurrentChallenge] = useState(0);\n\n  const [showResult, setShowResult] = useState(false);\n  const [marker, setMarker] = useState(null);\n  const [currentMarkers, setCurrentMarkers] = useState(null);\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  });\n\n  const { match } = props;\n  const { params } = match;\n  const { challengeId } = params;\n\n  const getSubChallenges = async (subchallenges) => {\n    var tempchallenges = [];\n    await Promise.all(\n      subchallenges.map(async (subchallenge) => {\n        const challengedata = await db\n          .collection(\"Sub-challenges\")\n          .doc(subchallenge.id)\n          .get();\n        tempchallenges = [...tempchallenges, challengedata.data()];\n      })\n    );\n    return tempchallenges;\n  };\n\n  const handleGuess = () => {\n    console.log(subchallenges[currentChallenge].location);\n    const actualMarker = {\n      lat: subchallenges[currentChallenge].location.latitude,\n      lng: subchallenges[currentChallenge].location.longitude,\n    };\n    const markersToSend = {\n      actual: actualMarker,\n      guess: marker,\n    };\n    setCurrentMarkers(markersToSend);\n    setShowResult(true);\n  };\n\n  const handleMapClick = (event) => {\n    setMarker({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n    });\n  };\n\n  const handleMouseOver = (event) => {\n    setMapStyle(mapContainerStyleMouse);\n  };\n\n  const handleMouseOut = (event) => {\n    setMapStyle(mapContainerStyleNoMouse);\n  };\n\n  useEffect(() => {\n    const fetchChallenge = async () => {\n      const challengedata = await db.collection(\"Sub-challenges\").get();\n      var subchallenges = challengedata.docs;\n      if (subchallenges.length > 5) {\n        subchallenges = getRandomSubarray(subchallenges, 5);\n      }\n      const tempchallenges = await getSubChallenges(subchallenges);\n      console.log(tempchallenges[0]);\n      setSubchallenges(tempchallenges);\n    };\n    fetchChallenge();\n  }, []);\n\n  const handleContinue = useCallback(\n    (points) => {\n      console.log(\"updating\");\n      console.log(points);\n      setTotalPoints((currentPoints) => currentPoints + points);\n      setMarker(null);\n      setTotalMarkers((total) => [...total, currentMarkers]);\n      setCurrentMarkers(null);\n      setCurrentChallenge((current) => current + 1);\n      setShowResult(false);\n    },\n    [currentChallenge, currentMarkers]\n  );\n\n  if (loadError) return \"Error\";\n  if (!isLoaded || subchallenges.length === 0) return \"Loading...\";\n  if (currentChallenge >= subchallenges.length) {\n    console.log(totalPoints);\n    return (\n      <ChallengeResult totalPoints={totalPoints} totalMarkers={totalMarkers} />\n    );\n  }\n  if (showResult) {\n    return (\n      <SubChallengeResult\n        Markers={currentMarkers}\n        onContinue={handleContinue}\n      />\n    );\n  }\n  return (\n    <div>\n      <div\n      \n      style={{\n        position: \"fixed\", \n        top:\"0\", \n        left:\"0\", \n        width:\"100%\", \n        height:\"100%\",\n        zIndex: \"-1\"\n      }}\n      >\n        <ParticlesBg type=\"circle\" bg={true} />\n      </div>\n        <div>\n        <h1 style={{fontSize: \"40px\", textAlign: \"center\", color:\"black\"}} >Random Challenge!</h1>\n      </div>\n\n      <div>\n      <Grid\n        container\n        direction=\"row\"\n        alignItems=\"center\"\n        justify=\"center\"\n        spacing={0}\n      >\n        <Grid item xs={\"auto\"} sm={2} md={2} lg={2} />\n        <Grid item xs={12} sm={8} md={8} lg={8}>\n          <Carousel>\n            {subchallenges[currentChallenge].images.map((item, i) => (\n              <img \n              style={{\n                align: \"center\",\n                display:\"block\",\n                width: \"auto\",\n                border: \"5px dotted black\",\n                padding: \"20px\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\"\n              }}\n              src={item} alt={i} key={i} height={\"550\"} width={\"800\"} marginLeft= {\"auto\"}\n              marginRight= {\"auto\"} class={\"center\"} />\n            ))}\n          </Carousel>\n        </Grid>\n        <Grid item xs={\"auto\"} sm={2} md={2} lg={2} />\n      </Grid>\n      </div>\n\n      <div>\n      <Button\n            color=\"primary\"\n            size=\"large\"\n            variant=\"contained\"\n            disabled={marker === null}\n            onClick={handleGuess}\n\n            style={{\n              position: \"aboslute\", \n              top: \"50%\",\n              left: \"50%\",\n              display:\"block\",\n              align:\"center\",\n              \"-ms-transform\": \"translate(-50%, -50%)\",\n              transform: \"translate(-50%, -50%)\",\n            \n            }}\n          >\n            Guess\n          </Button>\n      </div>\n      <div onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\n        <GoogleMap\n          mapContainerStyle={mapstyle}\n          zoom={3}\n          center={center}\n          onClick={handleMapClick}\n        >\n          <Marker\n            position={marker}\n            icon={{\n              url: `/Images/guess.png`,\n              origin: new window.google.maps.Point(0, 0),\n              anchor: new window.google.maps.Point(15, 15),\n              scaledSize: new window.google.maps.Size(30, 30),\n            }}\n\n            style={{\n              align: \"center\",\n              width: \"auto\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n\n              position: \"fixed\", \n              bottom:\"0\",\n            }}\n          />\n        </GoogleMap>\n      </div>\n    </div>\n  );\n}\n\nexport default RandomChallenge;\n"]},"metadata":{},"sourceType":"module"}